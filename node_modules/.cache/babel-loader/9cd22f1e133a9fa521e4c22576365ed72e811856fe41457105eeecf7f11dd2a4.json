{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isLocalURL\", {\n  enumerable: true,\n  get: function () {\n    return isLocalURL;\n  }\n});\nconst _utils = require(\"../../utils\");\nconst _hasbasepath = require(\"../../../../client/has-base-path\");\nfunction isLocalURL(url) {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (!(0, _utils.isAbsoluteUrl)(url)) return true;\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = (0, _utils.getLocationOrigin)();\n    const resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n}","map":{"version":3,"names":["isLocalURL","url","_utils","isAbsoluteUrl","locationOrigin","getLocationOrigin","resolved","URL","origin","_hasbasepath","hasBasePath","pathname","_"],"sources":["../../../../../src/shared/lib/router/utils/is-local-url.ts"],"sourcesContent":[null],"mappings":";;;;;+BAMgB;;;WAAAA,UAAA;;;uBANiC;6BACrB;AAKrB,SAASA,WAAWC,GAAW,EAAW;EAC/C;EACA,IAAI,CAAC,IAAAC,MAAA,CAAAC,aAAa,EAACF,GAAA,GAAM,OAAO,IAAI;EACpC,IAAI;IACF;IACA,MAAMG,cAAA,GAAiB,IAAAF,MAAA,CAAAG,iBAAiB;IACxC,MAAMC,QAAA,GAAW,IAAIC,GAAA,CAAIN,GAAA,EAAKG,cAAA;IAC9B,OAAOE,QAAA,CAASE,MAAM,KAAKJ,cAAA,IAAkB,IAAAK,YAAA,CAAAC,WAAW,EAACJ,QAAA,CAASK,QAAQ;EAC5E,EAAE,OAAOC,CAAA,EAAG;IACV,OAAO,KAAK;EACd;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}