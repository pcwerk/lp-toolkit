{"ast":null,"code":"/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"parsePath\", {\n  enumerable: true,\n  get: function () {\n    return parsePath;\n  }\n});\nfunction parsePath(path) {\n  const hashIndex = path.indexOf(\"#\");\n  const queryIndex = path.indexOf(\"?\");\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n      hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n    };\n  }\n  return {\n    pathname: path,\n    query: \"\",\n    hash: \"\"\n  };\n}","map":{"version":3,"names":["parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","substring","query","undefined","hash","slice"],"sources":["../../../../../src/shared/lib/router/utils/parse-path.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;GAIC;;;;;+BACe;;;WAAAA,SAAA;;;AAAT,SAASA,UAAUC,IAAY,EAAE;EACtC,MAAMC,SAAA,GAAYD,IAAA,CAAKE,OAAO,CAAC;EAC/B,MAAMC,UAAA,GAAaH,IAAA,CAAKE,OAAO,CAAC;EAChC,MAAME,QAAA,GAAWD,UAAA,GAAa,CAAC,MAAMF,SAAA,GAAY,KAAKE,UAAA,GAAaF,SAAQ;EAE3E,IAAIG,QAAA,IAAYH,SAAA,GAAY,CAAC,GAAG;IAC9B,OAAO;MACLI,QAAA,EAAUL,IAAA,CAAKM,SAAS,CAAC,GAAGF,QAAA,GAAWD,UAAA,GAAaF,SAAS;MAC7DM,KAAA,EAAOH,QAAA,GACHJ,IAAA,CAAKM,SAAS,CAACH,UAAA,EAAYF,SAAA,GAAY,CAAC,IAAIA,SAAA,GAAYO,SAAS,IACjE,EAAE;MACNC,IAAA,EAAMR,SAAA,GAAY,CAAC,IAAID,IAAA,CAAKU,KAAK,CAACT,SAAA,IAAa;IACjD;EACF;EAEA,OAAO;IAAEI,QAAA,EAAUL,IAAA;IAAMO,KAAA,EAAO;IAAIE,IAAA,EAAM;EAAG;AAC/C"},"metadata":{},"sourceType":"script","externalDependencies":[]}