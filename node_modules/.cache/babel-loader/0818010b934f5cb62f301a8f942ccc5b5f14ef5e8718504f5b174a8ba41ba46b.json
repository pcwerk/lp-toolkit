{"ast":null,"code":"var _jsxFileName = \"/Users/hova/Documents/lp-toolkit/src/components/Button.jsx\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyles = {\n  solid: \"inline-flex justify-center rounded-lg py-2 px-3 text-sm font-semibold outline-2 outline-offset-2 transition-colors\",\n  outline: \"inline-flex justify-center rounded-lg border py-[calc(theme(spacing.2)-1px)] px-[calc(theme(spacing.3)-1px)] text-sm outline-2 outline-offset-2 transition-colors\"\n};\nconst variantStyles = {\n  solid: {\n    cyan: \"relative overflow-hidden bg-cyan-500 text-white before:absolute before:inset-0 active:before:bg-transparent hover:before:bg-white/10 active:bg-cyan-600 active:text-white/80 before:transition-colors\",\n    white: \"bg-white text-cyan-900 hover:bg-white/90 active:bg-white/90 active:text-cyan-900/70\",\n    gray: \"bg-gray-800 text-white hover:bg-gray-900 active:bg-gray-800 active:text-white/80\"\n  },\n  outline: {\n    gray: \"border-gray-300 text-gray-700 hover:border-gray-400 active:bg-gray-100 active:text-gray-700/80\"\n  }\n};\nexport const Button = ({\n  variant = \"solid\",\n  color = \"gray\",\n  className,\n  href,\n  ...props\n}) => {\n  className = clsx(baseStyles[variant], variantStyles[variant][color], className);\n  if (href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      className: className,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: className,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["clsx","jsxDEV","_jsxDEV","baseStyles","solid","outline","variantStyles","cyan","white","gray","Button","variant","color","className","href","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hova/Documents/lp-toolkit/src/components/Button.jsx"],"sourcesContent":["import clsx from \"clsx\";\n\nconst baseStyles = {\n  solid:\n    \"inline-flex justify-center rounded-lg py-2 px-3 text-sm font-semibold outline-2 outline-offset-2 transition-colors\",\n  outline:\n    \"inline-flex justify-center rounded-lg border py-[calc(theme(spacing.2)-1px)] px-[calc(theme(spacing.3)-1px)] text-sm outline-2 outline-offset-2 transition-colors\",\n};\n\nconst variantStyles = {\n  solid: {\n    cyan: \"relative overflow-hidden bg-cyan-500 text-white before:absolute before:inset-0 active:before:bg-transparent hover:before:bg-white/10 active:bg-cyan-600 active:text-white/80 before:transition-colors\",\n    white:\n      \"bg-white text-cyan-900 hover:bg-white/90 active:bg-white/90 active:text-cyan-900/70\",\n    gray: \"bg-gray-800 text-white hover:bg-gray-900 active:bg-gray-800 active:text-white/80\",\n  },\n  outline: {\n    gray: \"border-gray-300 text-gray-700 hover:border-gray-400 active:bg-gray-100 active:text-gray-700/80\",\n  },\n};\n\nexport const Button = ({ variant = \"solid\", color = \"gray\", className, href, ...props }) => {\n  className = clsx(\n    baseStyles[variant],\n    variantStyles[variant][color],\n    className\n  );\n\n  if (href) {\n    return (\n      <a href={href} className={className} {...props} />\n    );\n  } else {\n    return (\n      <button className={className} {...props} />\n    );\n  }\n};\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,UAAU,GAAG;EACjBC,KAAK,EACH,oHAAoH;EACtHC,OAAO,EACL;AACJ,CAAC;AAED,MAAMC,aAAa,GAAG;EACpBF,KAAK,EAAE;IACLG,IAAI,EAAE,uMAAuM;IAC7MC,KAAK,EACH,qFAAqF;IACvFC,IAAI,EAAE;EACR,CAAC;EACDJ,OAAO,EAAE;IACPI,IAAI,EAAE;EACR;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAAEC,OAAO,GAAG,OAAO;EAAEC,KAAK,GAAG,MAAM;EAAEC,SAAS;EAAEC,IAAI;EAAE,GAAGC;AAAM,CAAC,KAAK;EAC1FF,SAAS,GAAGb,IAAI,CACdG,UAAU,CAACQ,OAAO,CAAC,EACnBL,aAAa,CAACK,OAAO,CAAC,CAACC,KAAK,CAAC,EAC7BC,SACF,CAAC;EAED,IAAIC,IAAI,EAAE;IACR,oBACEZ,OAAA;MAAGY,IAAI,EAAEA,IAAK;MAACD,SAAS,EAAEA,SAAU;MAAA,GAAKE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAEtD,CAAC,MAAM;IACL,oBACEjB,OAAA;MAAQW,SAAS,EAAEA,SAAU;MAAA,GAAKE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAE/C;AACF,CAAC;AAACC,EAAA,GAhBWV,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}