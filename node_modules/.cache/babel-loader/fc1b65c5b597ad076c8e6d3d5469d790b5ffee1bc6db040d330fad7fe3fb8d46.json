{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  searchParamsToUrlQuery: null,\n  urlQueryToSearchParams: null,\n  assign: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  searchParamsToUrlQuery: function () {\n    return searchParamsToUrlQuery;\n  },\n  urlQueryToSearchParams: function () {\n    return urlQueryToSearchParams;\n  },\n  assign: function () {\n    return assign;\n  }\n});\nfunction searchParamsToUrlQuery(searchParams) {\n  const query = {};\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === \"undefined\") {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === \"string\" || typeof param === \"number\" && !isNaN(param) || typeof param === \"boolean\") {\n    return String(param);\n  } else {\n    return \"\";\n  }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n  const result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(param => {\n    let [key, value] = param;\n    if (Array.isArray(value)) {\n      value.forEach(item => result.append(key, stringifyUrlQueryParam(item)));\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\nfunction assign(target) {\n  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    searchParamsList[_key - 1] = arguments[_key];\n  }\n  searchParamsList.forEach(searchParams => {\n    Array.from(searchParams.keys()).forEach(key => target.delete(key));\n    searchParams.forEach((value, key) => target.append(key, value));\n  });\n  return target;\n}","map":{"version":3,"names":["searchParamsToUrlQuery","urlQueryToSearchParams","assign","searchParams","query","forEach","value","key","Array","isArray","push","stringifyUrlQueryParam","param","isNaN","String","urlQuery","result","URLSearchParams","Object","entries","item","append","set","target","_len","arguments","length","searchParamsList","_key","from","keys","delete"],"sources":["../../../../../src/shared/lib/router/utils/querystring.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;EAEgBA,sBAAsB,WAAAA,CAAA;WAAtBA,sBAAA;;EA4BAC,sBAAsB,WAAAA,CAAA;WAAtBA,sBAAA;;EAcAC,MAAM,WAAAA,CAAA;WAANA,MAAA;;;AA1CT,SAASF,uBACdG,YAA6B,EACb;EAChB,MAAMC,KAAA,GAAwB,CAAC;EAC/BD,YAAA,CAAaE,OAAO,CAAC,CAACC,KAAA,EAAOC,GAAA,KAAQ;IACnC,IAAI,OAAOH,KAAK,CAACG,GAAA,CAAI,KAAK,aAAa;MACrCH,KAAK,CAACG,GAAA,CAAI,GAAGD,KAAA;IACf,OAAO,IAAIE,KAAA,CAAMC,OAAO,CAACL,KAAK,CAACG,GAAA,CAAI,GAAG;MAClCH,KAAK,CAACG,GAAA,CAAI,CAAcG,IAAI,CAACJ,KAAA;IACjC,OAAO;MACLF,KAAK,CAACG,GAAA,CAAI,GAAG,CAACH,KAAK,CAACG,GAAA,CAAI,EAAYD,KAAA,CAAM;IAC5C;EACF;EACA,OAAOF,KAAA;AACT;AAEA,SAASO,uBAAuBC,KAAc,EAAU;EACtD,IACE,OAAOA,KAAA,KAAU,YAChB,OAAOA,KAAA,KAAU,YAAY,CAACC,KAAA,CAAMD,KAAA,KACrC,OAAOA,KAAA,KAAU,WACjB;IACA,OAAOE,MAAA,CAAOF,KAAA;EAChB,OAAO;IACL,OAAO;EACT;AACF;AAEO,SAASX,uBACdc,QAAwB,EACP;EACjB,MAAMC,MAAA,GAAS,IAAIC,eAAA;EACnBC,MAAA,CAAOC,OAAO,CAACJ,QAAA,EAAUV,OAAO,CAACO,KAAA,IAAkB;QAAjB,CAACL,GAAA,EAAKD,KAAA,CAAM,GAAAM,KAAA;IAC5C,IAAIJ,KAAA,CAAMC,OAAO,CAACH,KAAA,GAAQ;MACxBA,KAAA,CAAMD,OAAO,CAAEe,IAAA,IAASJ,MAAA,CAAOK,MAAM,CAACd,GAAA,EAAKI,sBAAA,CAAuBS,IAAA;IACpE,OAAO;MACLJ,MAAA,CAAOM,GAAG,CAACf,GAAA,EAAKI,sBAAA,CAAuBL,KAAA;IACzC;EACF;EACA,OAAOU,MAAA;AACT;AAEO,SAASd,OACdqB,MAAuB,EAEN;EADjB,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,gBAAG,GAAH,IAAAnB,KAAA,CAAAgB,IAAA,OAAAA,IAAA,QAAsC,GAAtCI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;IAAGD,gBAAA,CAAHC,IAAA,QAAAH,SAAA,CAAAG,IAAA,CAAsC;EAAD;EAErCD,gBAAA,CAAiBtB,OAAO,CAAEF,YAAA,IAAiB;IACzCK,KAAA,CAAMqB,IAAI,CAAC1B,YAAA,CAAa2B,IAAI,IAAIzB,OAAO,CAAEE,GAAA,IAAQgB,MAAA,CAAOQ,MAAM,CAACxB,GAAA;IAC/DJ,YAAA,CAAaE,OAAO,CAAC,CAACC,KAAA,EAAOC,GAAA,KAAQgB,MAAA,CAAOF,MAAM,CAACd,GAAA,EAAKD,KAAA;EAC1D;EACA,OAAOiB,MAAA;AACT"},"metadata":{},"sourceType":"script","externalDependencies":[]}