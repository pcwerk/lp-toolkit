{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"detectDomainLocale\", {\n  enumerable: true,\n  get: function () {\n    return detectDomainLocale;\n  }\n});\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n  if (!domainItems) return;\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase();\n  }\n  for (const item of domainItems) {\n    var _item_domain, _item_locales;\n    // remove port if present\n    const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\")[0].toLowerCase();\n    if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some(locale => locale.toLowerCase() === detectedLocale))) {\n      return item;\n    }\n  }\n}","map":{"version":3,"names":["detectDomainLocale","domainItems","hostname","detectedLocale","toLowerCase","item","_item_domain","_item_locales","domainHostname","domain","split","defaultLocale","locales","some","locale"],"sources":["../../../../src/shared/lib/i18n/detect-domain-locale.ts"],"sourcesContent":[null],"mappings":";;;;;+BAEgB;;;WAAAA,kBAAA;;;AAAT,SAASA,mBACdC,WAA4B,EAC5BC,QAAiB,EACjBC,cAAuB,EACvB;EACA,IAAI,CAACF,WAAA,EAAa;EAElB,IAAIE,cAAA,EAAgB;IAClBA,cAAA,GAAiBA,cAAA,CAAeC,WAAW;EAC7C;EAEA,KAAK,MAAMC,IAAA,IAAQJ,WAAA,EAAa;QAEPK,YAAA,EAIrBC,aAAA;IALF;IACA,MAAMC,cAAA,GAAiB,CAAAF,YAAA,GAAAD,IAAA,CAAKI,MAAM,YAAX,SAAAH,YAAA,CAAaI,KAAA,CAAM,IAAI,CAAC,EAAE,CAACN,WAAW,EAAE;IAC/D,IACEF,QAAA,KAAaM,cAAA,IACbL,cAAA,KAAmBE,IAAA,CAAKM,aAAa,CAACP,WAAW,OACjD,CAAAG,aAAA,GAAAF,IAAA,CAAKO,OAAO,YAAZ,SAAAL,aAAA,CAAcM,IAAA,CAAMC,MAAA,IAAWA,MAAA,CAAOV,WAAW,OAAOD,cAAA,IACxD;MACA,OAAOE,IAAA;IACT;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}