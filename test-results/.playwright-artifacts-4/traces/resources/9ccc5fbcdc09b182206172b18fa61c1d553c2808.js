"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[6666],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return N}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(a),k=r,N=m["".concat(p,".").concat(k)]||m[k]||c[k]||i;return a?n.createElement(N,l(l({ref:t},d),{},{components:a})):n.createElement(N,l({ref:t},d))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},9139:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return k},default:function(){return h},frontMatter:function(){return c},metadata:function(){return N},toc:function(){return f}});var n=a(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,d=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&d(e,a,t[a]);if(o)for(var a of o(t))s.call(t,a)&&d(e,a,t[a]);return e};const c={id:"test-cli",title:"Command line"},k=void 0,N={unversionedId:"test-cli",id:"version-stable/test-cli",title:"Command line",description:"Introduction",source:"@site/versioned_docs/version-stable/test-cli.mdx",sourceDirName:".",slug:"/test-cli",permalink:"/docs/test-cli",draft:!1,tags:[],version:"stable",frontMatter:{id:"test-cli",title:"Command line"},sidebar:"docs",previous:{title:"Annotations",permalink:"/docs/test-annotations"},next:{title:"Emulation",permalink:"/docs/emulation"}},u={},f=[{value:"Introduction",id:"introduction",level:2},{value:"Reference",id:"reference",level:2}],g={toc:f};function h(e){var t,a=e,{components:r}=a,d=((e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&s.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=m(m({},g),d),i(t,l({components:r,mdxType:"MDXLayout"}))),(0,n.kt)("h2",m({},{id:"introduction"}),"Introduction"),(0,n.kt)("p",null,"Here are the most common options available in the command line."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run all the tests"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run a single test file"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test tests/todo-page.spec.ts\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run a set of test files"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test tests/todo-page/ tests/landing-page/\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run files that have ",(0,n.kt)("inlineCode",{parentName:"p"},"my-spec")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"my-spec-2")," in the file name"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test my-spec my-spec-2\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run tests that are in line 42 in my-spec.ts"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test my-spec.ts:42\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run the test with the title"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),'npx playwright test -g "add a todo item"\n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run tests in headed browsers"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test --headed\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run all the tests against a specific project"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test --project=chromium\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Disable ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/test-parallel"}),"parallelization")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test --workers=1\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Choose a ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/test-reporters"}),"reporter")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test --reporter=dot\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run in debug mode with ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/debug"}),"Playwright Inspector")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test --debug\n")),(0,n.kt)("p",{parentName:"li"},"-- Run tests in interactive UI mode, with a built-in watch mode (Preview)"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test --ui\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Ask for help"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright test --help\n")))),(0,n.kt)("h2",m({},{id:"reference"}),"Reference"),(0,n.kt)("p",null,"Complete set of Playwright Test options is available in the ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/test-use-options"}),"configuration file"),". Following options can be passed to a command line and take priority over the configuration file:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:"left"}),"Option"),(0,n.kt)("th",m({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--headed")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Run tests in headed browsers. Useful for debugging.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--browser")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Run test in a specific browser. Available options are  ",(0,n.kt)("inlineCode",{parentName:"td"},'"chromium"'),", ",(0,n.kt)("inlineCode",{parentName:"td"},'"firefox"'),", ",(0,n.kt)("inlineCode",{parentName:"td"},'"webkit"')," or ",(0,n.kt)("inlineCode",{parentName:"td"},'"all"')," to run tests in all three browsers at the same time.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--debug")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Run tests with Playwright Inspector. Shortcut for ",(0,n.kt)("inlineCode",{parentName:"td"},"PWDEBUG=1")," environment variable and ",(0,n.kt)("inlineCode",{parentName:"td"},"--timeout=0 --max-failures=1 --headed --workers=1")," options.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"-c <file>")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"--config <file>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Configuration file. If not passed, defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"playwright.config.ts")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"playwright.config.js")," in the current directory.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"-c <dir>")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"--config <dir>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Configuration file. If not passed, defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"playwright.config.ts")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"playwright.config.js")," in the current directory.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--forbid-only")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Whether to disallow ",(0,n.kt)("inlineCode",{parentName:"td"},"test.only"),". Useful on CI.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"-g <grep>")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"--grep <grep>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Only run tests matching this regular expression. For example, this will run ",(0,n.kt)("inlineCode",{parentName:"td"},"'should add to cart'")," when passed ",(0,n.kt)("inlineCode",{parentName:"td"},'-g "add to cart"'),".  The regular expression will be tested against the string that consists of the test file name, ",(0,n.kt)("inlineCode",{parentName:"td"},"test.describe")," name (if any) and the test name divided by spaces, e.g. ",(0,n.kt)("inlineCode",{parentName:"td"},"my-test.spec.ts my-suite my-test"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--grep-invert <grep>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Only run tests ",(0,n.kt)("strong",{parentName:"td"},"not")," matching this regular expression. The opposite of ",(0,n.kt)("inlineCode",{parentName:"td"},"--grep"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--global-timeout <number>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Total timeout for the whole test run in milliseconds. By default, there is no global timeout. Learn more about ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-timeouts"}),"various timeouts"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--list")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"list all the tests, but do not run them.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--max-failures <N>")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"-x")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Stop after the first ",(0,n.kt)("inlineCode",{parentName:"td"},"N")," test failures. Passing ",(0,n.kt)("inlineCode",{parentName:"td"},"-x")," stops after the first failure.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--output <dir>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Directory for artifacts produced by tests, defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"test-results"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--pass-with-no-tests")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Allows the test suite to pass when no files are found.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--project <name>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Only run tests from one of the specified ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-projects"}),"projects"),". Defaults to running all projects defined in the configuration file.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--quiet")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Whether to suppress stdout and stderr from the tests.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--repeat-each <N>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Run each test ",(0,n.kt)("inlineCode",{parentName:"td"},"N")," times, defaults to one.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--reporter <reporter>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Choose a reporter: minimalist ",(0,n.kt)("inlineCode",{parentName:"td"},"dot"),", concise ",(0,n.kt)("inlineCode",{parentName:"td"},"line")," or detailed ",(0,n.kt)("inlineCode",{parentName:"td"},"list"),". See ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-reporters"}),"reporters")," for more information.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--retries <number>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"The maximum number of ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-retries#retries"}),"retries")," for flaky tests, defaults to zero (no retries).")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--shard <shard>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-parallel#shard-tests-between-multiple-machines"}),"Shard")," tests and execute only selected shard, specified in the form ",(0,n.kt)("inlineCode",{parentName:"td"},"current/all"),", 1-based, for example ",(0,n.kt)("inlineCode",{parentName:"td"},"3/5"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--timeout <number>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Maximum timeout in milliseconds for each test, defaults to 30 seconds. Learn more about ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-timeouts"}),"various timeouts"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--trace <mode>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Force tracing mode, can be ",(0,n.kt)("inlineCode",{parentName:"td"},"on"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"off"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"on-first-retry"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"on-all-retries"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"retain-on-failure"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--ignore-snapshots")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Whether to ignore ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-snapshots"}),"snapshots"),". Use this when snapshot expectations are known to be different, e.g. running tests on Linux against Windows screenshots.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--update-snapshots")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"-u")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"Whether to update ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-snapshots"}),"snapshots")," with actual results instead of comparing them. Use this when snapshot expectations have changed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"--workers <number>")," or ",(0,n.kt)("inlineCode",{parentName:"td"},"-j <number>")),(0,n.kt)("td",m({parentName:"tr"},{align:"left"}),"The maximum number of concurrent worker processes that run in ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/test-parallel"}),"parallel"),".")))))}h.isMDXComponent=!0}}]);